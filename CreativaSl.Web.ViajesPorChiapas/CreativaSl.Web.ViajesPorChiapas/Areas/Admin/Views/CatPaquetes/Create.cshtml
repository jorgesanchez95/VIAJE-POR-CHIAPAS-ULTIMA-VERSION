@model CreativaSl.Web.ViajesPorChiapas.Models.PaquetesModels
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section featured
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Administrador/plugins/cropper/cropper.min.css")" />

    @{
        var message = TempData["message"] ?? string.Empty;
        var typemessage = TempData["typemessage"] ?? string.Empty;
    }
    <div class="page-content">
        <div id="Error" class="error message" style="display: none">
            <h3></h3>
        </div>
        <div id="Success" class="success message" style="display: none">
            <h3></h3>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    <h3 class="page-title">Viaje Por Chiapas<small>  Administración</small></h3>
                </div>
            </div>
            <div class="tab-pane">
                <div class="portlet box blue">
                    <div class="portlet-title">
                        <div class="caption"><i class="icon-reorder"></i>Nuevo Paquete</div>
                    </div>
                    @using (Html.BeginForm("Create", "CatPaquetes", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        @Html.HiddenFor(model => model.id_paquete)


                        <div class="portlet-body form">
                            <h3 class="form-section">Información</h3>
                        <div class="row-fluid">
                            <div class="span6">
                                <div class="control-group">
                                    <label class="control-label">Tipo Paquete<span class="required"> *</span></label>
                                    <div class="controls">
                                        @Html.DropDownListFor(model => model.tablaTipoPaqueteCmb, ViewData["cmbTipoPaquete"] as SelectList, new {id = "ListTipoPaquetes", @class = "span12 m-wrap chosen"})
                                        @Html.ValidationMessageFor(model => model.tablaTipoPaqueteCmb)
                                    </div>
                                </div>
                                <span class="help-block">Seleccione la sección </span>
                            </div>
                            <div class="span6">
                                <div class="control-group">
                                    <label class="control-label">Sección<span class="required"> *</span></label>
                                    <div class="controls">
                                        @Html.DropDownListFor(model => model.tablaSeccionesCmb, ViewData["cmbSecciones"] as SelectList, new { id = "ListSecciones", @class = "span12 m-wrap chosen" })
                                        @Html.ValidationMessageFor(model => model.tablaSeccionesCmb)
                                    </div>
                                </div>
                                <span class="help-block">Seleccione la sección </span>
                            </div>
                        </div>


                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Nombre<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.nombre, new { id = "nombre", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.nombre)
                                            <span class="help-block">Ingrese el nombre</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Nombre(Ingles)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.nombreIngles, new { id = "nombreIngles", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.nombreIngles)
                                            <span class="help-block">Ingrese el nombre(ingles)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                     

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Descripción<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.descripcion, new { id = "descripcion", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.descripcion)
                                            <span class="help-block">Ingrese una descripcion</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Descripción(Ingles)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.descripcionIngles, new { id = "descripcionIngles", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.descripcionIngles)
                                            <span class="help-block">Ingrese una descripcion(Ingles)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Incluye<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.incluye, new { id = "incluye", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.incluye)
                                            <span class="help-block">Ingrese lo que inclure</span>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Incluye (inglés)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.incluyeIngles, new { id = "incluyeIngles", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.incluyeIngles)
                                            <span class="help-block">Ingrese lo que inclure (inglés)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">No Incluye<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.noIncluye, new { id = "noIncluye", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.noIncluye)
                                            <span class="help-block">Ingrese lo que NO inclure</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">No Incluye (inglés)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.noIncluyeIngles, new { id = "noIncluyeIngles", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.noIncluyeIngles)
                                            <span class="help-block">Ingrese lo que NO inclure (inglés)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Fin de Servicios<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.finDeServicios, new { id = "finDeServicios", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.finDeServicios)
                                            <span class="help-block">Ingrese Fin de Servicios</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Fin de Servicios (inglés)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.finDeServiciosIngles, new { id = "finDeServiciosIngles", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.finDeServiciosIngles)
                                            <span class="help-block">Ingrese Fin de Servicios (inglés)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Cantidad de Días<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.cantidadDias, new { id = "cantidadDias", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.cantidadDias)
                                            <span class="help-block">Ingrese Cantidad de Dias</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Cantidad de Noches<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.cantidadNoches, new { id = "cantidadNoches", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.cantidadNoches)
                                            <span class="help-block">Ingrese Cantidad de Noches</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Hora de Llegada<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.horaLlegada, new { id = "horaLlegada", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.horaLlegada)
                                            <span class="help-block">Ingrese Hora de Llegada</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Minutos de Llegada<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.minutosLlegada, new { id = "minutosLlegada", @class = "span12 m-wrap" })
                                            @Html.ValidationMessageFor(model => model.minutosLlegada)
                                            <span class="help-block">Ingrese Minutos de Llegada</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <h3 class="form-section">Ubicación</h3>
                            <div class="row-fluid">
                                <div class="span4">
                                    <div class="control-group">
                                        <label class="control-label">País<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.tablaPaisesCmb, ViewData["cmbPaises"] as SelectList, new { id = "ListPaises", @class = "span12 m-wrap chosen" })
                                            @Html.ValidationMessageFor(model => model.tablaPaisesCmb)
                                        </div>
                                    </div>
                                    <span class="help-block">Seleccione la sección </span>
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <label class="control-label">Estado<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.tablaEstadosCmb, ViewData["cmbEstados"] as SelectList, new { id = "ListEstado", @class = "span12 m-wrap chosen" })
                                            @Html.ValidationMessageFor(model => model.tablaEstadosCmb)
                                        </div>
                                    </div>
                                    <span class="help-block">Seleccione el estado </span>
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <label class="control-label">Municipio<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.tablaMunicipiosCmb, ViewData["cmbMunicipios"] as SelectList, new { id = "ListMunicipio", @class = "span12 m-wrap chosen" })
                                            @Html.ValidationMessageFor(model => model.tablaMunicipiosCmb)
                                        </div>
                                    </div>
                                    <span class="help-block">Seleccione el municipio </span>
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Latitud<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.latitud, new { id = "latitud", @class = "span12 m-wrap", @readonly = true })
                                            @Html.ValidationMessageFor(model => model.latitud)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        <label class="control-label">Longitud<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.longitud, new { id = "longitud", @class = "span12 m-wrap", @readonly = true })
                                            @Html.ValidationMessageFor(model => model.longitud)

                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="portlet box blue" style="height:440px;">
                                        <div class="portlet-title">
                                            <div class="caption"><i class="icon-reorder"></i>Mapa</div>
                                            <div class="tools">
                                                <a href="javascript:;" class="reload"></a>
                                            </div>
                                        </div>
                                        <div class="portlet-body" style="height:382px;">
                                            <div class="form-inline">
                                                <input type="text" id="gmap_geocoding_address" class="m-wrap medium" placeholder="Buscar..." />
                                                <input type="button" id="gmap_geocoding_btn" class="btn" value="Buscar" />
                                            </div>
                                            <br />
                                            <div id="gmap_geocoding" class="gmaps">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">ALT<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.alt, new { id = "alt", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.alt)
                                            <span class="help-block">Alt</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Title<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.title, new { id = "title", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.title)
                                            <span class="help-block">Title</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                             <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Nombre Imagen<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.nombreArchivo, new { id = "nombreArchivo", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.nombreArchivo)
                                            <span class="help-block">Nombre Imagen</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <h3 class="form-section">Imagen</h3>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <div class="controls">
                                            <div class="fileupload fileupload-new" data-provides="fileupload">
                                                <div class="img-container" style="max-height:300px; min-height:300px;">
                                                    <img src="@Url.Content("~/Imagenes/default.png")" alt="Picture" id="imgLugar" />
                                                </div>
                                                <br />
                                                <div class="btn-group">
                                                    <label class="btn btn-primary btn-upload" for="inputImage" title="Upload image file">
                                                        <span class="btn btn-file">
                                                            <span class="fileupload-new">Seleccionar Imagen</span>
                                                            @Html.TextBoxFor(model => model.foto, new { type = "file", id = "inputImage", accept = ".png, .jpg, .jpeg" })
                                                            @Html.ValidationMessageFor(model => model.foto)
                                                            <p id="val-img"></p>
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <input type="submit" value="Guardar" class="btn green">
                                <a href="@Url.Action("Index","CatPaquetes")" class="btn btn-default red"><i class="icon-prev"></i>Cancelar</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
   <script>
       $('#inputImage').change(function () {
           if (this.files[0].size > 10000000) {
               var control = jQuery('#inputImage');
               control.replaceWith(control = control.val('').clone(true));
               document.getElementById('val-img').innerHTML = "La imagen debe pesar menos de 10 mb. Seleccione nuevamente";
               $('#val-img').css("color", "red");

           }
           else {
               document.getElementById('val-img').innerHTML = "";
           }
       });
        var auxbol = 1;
        $(document).ready(function () {

            $("#ListPaises").change(function () {

                var id = $("#ListPaises").val();
                getEstado(id);
                var municipio = $("#ListMunicipio option:selected").text();
                var estado = $("#ListEstado option:selected").text();
                var pais = $("#ListPaises option:selected").text();
                var busqueda = municipio + ',' + estado + ',' + pais;
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': busqueda }, geocodeResult);
            });
            getMunicipio($("#ListEstado").val());

            $("#ListEstado").change(function () {
                var idPais = $("#ListPaises").val();
                var id = $("#ListEstado").val();
                getMunicipio(idPais, id);
                var municipio = $("#ListMunicipio option:selected").text();
                var estado = $("#ListEstado option:selected").text();
                var pais = $("#ListPaises option:selected").text();
                var busqueda = municipio + ',' + estado + ',' + pais;
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': busqueda }, geocodeResult);
            });
        });
        function getEstado(id) {

            $.ajax({
                url: "/Admin/CatPaquetes/Estado",
                data: { id: id },
                dataType: "json",
                type: "POST",
                error: function () {
                    $("#ListEstado").html('');
                },
                success: function (estado) {

                    var items = "";
                    for (var i = 0; i < estado.length; i++) {
                        items += "<option value=\"" + estado[i].id_estado + "\">" + estado[i].descripcion + "</option>";
                    }
                    $("#ListEstado").html(items);
                    getMunicipio($("#ListPaises").val(), $("#ListEstado").val());
                    if (auxbol == 1) {
                        $("#ListEstado").val('@Model.id_estado');
                        var municipio = $("#ListMunicipio option:selected").text();
                        var estado = $("#ListEstado option:selected").text();
                        var pais = $("#ListPaises option:selected").text();
                        var busqueda = municipio + ',' + estado + ',' + pais;
                        var geocoder = new google.maps.Geocoder();
                        geocoder.geocode({ 'address': busqueda }, geocodeResult);
                        auxbol = 0;
                    }
                }
            });
        }
        @*function getEstado(id) {
            $.ajax({
                url: "/Admin/CatPaquetes/Estado",
                data: { id: id },
                dataType: "json",
                type: "POST",
                error: function () {
                    $("#ListEstado").html('');
                },
                success: function (estado) {
                    var items = "";
                    for (var i = 0; i < estado.length; i++) {
                        items += "<option value=\"" + estado[i].id_estado + "\">" + estado[i].descripcion + "</option>";
                    }
                    $("#ListEstado").html(items);
                    if (auxbol == 1) {
                        $("#ListEstado").val('@Model.id_estado');
                        var municipio = $("#ListMunicipio option:selected").text();
                        var estado = $("#ListEstado option:selected").text();
                        var pais = $("#ListPaises option:selected").text();
                        var busqueda = municipio + ',' + estado + ',' + pais;
                        var geocoder = new google.maps.Geocoder();
                        geocoder.geocode({ 'address': busqueda }, geocodeResult);
                        auxbol = 0;
                    }
                }
            });
        }*@
        function getMunicipio(IdPa, id) {
            $.ajax({
                url: "/Admin/CatPaquetes/Municipio",
                data: { idPais: IdPa,
                    id: id
                },
                dataType: "json",
                type: "POST",
                error: function () {
                    $("#ListMunicipio").html('');
                },
                success: function (municipio) {
                    var items = "";
                    for (var i = 0; i < municipio.length; i++) {
                        items += "<option value=\"" + municipio[i].id_municipio + "\">" + municipio[i].descripcion + "</option>";
                    }
                    $("#ListMunicipio").html(items);
                    if (auxbol == 1) {
                        $("#ListMunicipio").val('@Model.id_municipio');
                        var municipio = $("#ListMunicipio option:selected").text();
                        var estado = $("#ListEstado option:selected").text();
                        var pais = $("#ListPaises option:selected").text();
                        var busqueda = municipio + ',' + estado + ',' + pais;
                        var geocoder = new google.maps.Geocoder();
                        geocoder.geocode({ 'address': busqueda }, geocodeResult);
                        auxbol = 0;
                    }
                }
            });
        }

        $.validator.addMethod('filesize', function (value, element, param) {
            return this.optional(element) || (element.files[0].size <= param)
        });
        $(function () {
            $('input[name^="foto2"]').rules('add', {
                accept: "png,jpg,jpeg",
                filesize: 10485760,
                messages: {
                    accept: "Solo archivos png, jpg, jpeg",
                    filesize: "Solo archivos de tamaño menor a 10 MB"
                }
            });
        });

        jQuery(document).ready(function () {
            var message = '@message';
            var typemessage = '@typemessage';

            if (typemessage && message) {
                if (typemessage == '1') {
                    $('#Success').html('<h3>' + message + '<h3>');
                    $('#Success').css("display", "block");
                    $('#Success').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Success').css("display", "block");
                } else if (typemessage == '2') {
                    $('#Error').html('<h3>' + message + '<h3>');
                    $('#Error').css("display", "block");
                    $('#Error').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Error').css("display", "block");
                }
            }
        });
</script>
    <script>
        $("#ListMunicipio").change(function () {
            var municipio = $("#ListMunicipio option:selected").text();
            var estado = $("#ListEstado option:selected").text();
            var pais = $("#ListPaises option:selected").text();
            var busqueda = municipio + ',' + estado + ',' + pais;
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': busqueda }, geocodeResult);
        });
    </script>
    <script src="@Url.Content("~/Content/Administrador/plugins/cropper/cropper.min.js")"></script>
    <script src="@Url.Content("~/Content/Administrador/scripts/image-cropper.js")"></script>
}
