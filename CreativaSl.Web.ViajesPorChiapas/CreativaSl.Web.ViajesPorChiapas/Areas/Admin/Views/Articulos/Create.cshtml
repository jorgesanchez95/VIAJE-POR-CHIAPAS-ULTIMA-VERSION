@model CreativaSl.Web.ViajesPorChiapas.Models.ArticulosModels
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section featured
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Administrador/plugins/cropper/cropper.min.css")"/>

    @{
        var message = TempData["message"] ?? string.Empty;
        var typemessage = TempData["typemessage"] ?? string.Empty;
    }
    <div class="page-content">
        <div id="Error" class="error message" style="display: none">
            <h3></h3>
        </div>
        <div id="Success" class="success message" style="display: none">
            <h3></h3>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    <h3 class="page-title">Viaje Por Chiapas<small> Administración</small></h3>
                </div>
            </div>
            <div class="tab-pane">
                <div class="portlet box blue">
                    <div class="portlet-title">
                        <div class="caption"><i class="icon-reorder"></i>Nuevo Artículo
                        </div>
                    </div>
                    @using (Html.BeginForm("Create", "Articulos", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal"}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        @Html.HiddenFor(model => model.id_post)

                        <div class="portlet-body form">
                            <h3 class="form-section">Información</h3>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Sección<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.tablaSeccionesCmb, ViewData["cmbSecciones"] as SelectList, new {id = "ListSecciones", @class = "span12 m-wrap chosen"})
                                            @Html.ValidationMessageFor(model => model.tablaSeccionesCmb)
                                        </div>
                                    </div>
                                    <span class="help-block">Seleccione la seccion </span>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Creado Por<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.creadoPor, new { id = "creadoPor", @class = "span12 m-wrap", placeholder="Viajes Por Chiapas" })
                                            @Html.ValidationMessageFor(model => model.creadoPor)
                                            <span class="help-block">Ingrese Creado por</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Título<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.titulo, new {id = "titulo", @class = "span12 m-wrap"})
                                            @Html.ValidationMessageFor(model => model.titulo)
                                            <span class="help-block">Ingrese el titulo</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Título(Ingles)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.tituloIngles, new {id = "tituloIngles", @class = "span12 m-wrap"})
                                            @Html.ValidationMessageFor(model => model.tituloIngles)
                                            <span class="help-block">Ingrese el titulo (Ingles)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Introducción<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.introduccion, new {id = "introduccion", @class = "span12 m-wrap summernote", @rows = "8"})
                                            @Html.ValidationMessageFor(model => model.introduccion)
                                            <span class="help-block">Ingrese el introduccion</span>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Introducción(Ingles)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.introduccionIngles, new { id = "introduccionIngles", @class = "span12 m-wrap summernote", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.introduccionIngles)
                                            <span class="help-block">Ingrese el introduccion (Ingles)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Contenido<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.contenido, new {id = "contenido", @class = "span12 m-wrap summernote", @rows = "8"})
                                            @Html.ValidationMessageFor(model => model.contenido)
                                            <span class="help-block">Ingrese el contenido</span>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <label class="control-label">Contenido(Ingles)<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextAreaFor(model => model.contenidoIngles, new { id = "contenidoIngles", @class = "span12 m-wrap summernote", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.contenidoIngles)
                                            <span class="help-block">Ingrese el contenido (Ingles)</span>
                                        </div>
                                    </div>
                                </div>


                            </div>

                            <div class="row-fluid">
                                <div class="span10">
                                    <div class="control-group">
                                        <label class="control-label">URL Youtube</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.urlYoutube, new {id = "urlYoutube", @class = "span12 m-wrap"})
                                            @Html.ValidationMessageFor(model => model.urlYoutube)
                                            <span class="help-block">Ingrese el link de Youtube</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="span2">
                                    <div class="control-group">
                                        <label class="control-label">Comprobar video</label>
                                        <div class="controls">
                                            <button type="button" id="openModal" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Ver Video</button>
                                        </div>
                                        <span class="help-block"> </span>
                                    </div>
                                </div>
                            </div>

                             <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">ALT<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.alt, new { id = "alt", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.alt)
                                            <span class="help-block">Alt</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Title<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.title, new { id = "title", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.title)
                                            <span class="help-block">Title</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                             <div class="row-fluid">
                                <div class="span6">
                                    <div class="control-group">
                                        <label class="control-label">Nombre Imagen<span class="required"> *</span></label>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.nombreArchivo, new { id = "nombreArchivo", @class = "span12 m-wrap", @rows = "8" })
                                            @Html.ValidationMessageFor(model => model.nombreArchivo)
                                            <span class="help-block">Nombre Imagen</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <h3 class="form-section">Imagen</h3>
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="control-group">
                                        <div class="controls">
                                            <div class="fileupload fileupload-new" data-provides="fileupload">
                                                <div class="img-container" style="max-height: 300px; min-height: 300px;">
                                                    <img src="@Url.Content("~/Imagenes/default.png")" alt="Picture" id="imgLugar"/>
                                                </div>
                                                <br/>
                                                <div class="btn-group">
                                                    <label class="btn btn-primary btn-upload" for="inputImage" title="Upload image file">
                                                        <span class="btn btn-file">
                                                            <span class="fileupload-new">Seleccionar Imagen</span>
                                                            @Html.TextBoxFor(model => model.foto, new {type = "file", id = "inputImage", accept = ".png, .jpg, .jpeg"})
                                                            @Html.ValidationMessageFor(model => model.foto)
                                                            <p id="val-img"></p>
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <input type="submit" value="Guardar" class="btn green">
                                <a href="@Url.Action("Index", "Articulos")" class="btn btn-default red"><i class="icon-prev"></i>Cancelar</a>
                            </div>
                        </div>
                    }

                    <!-- Modal -->
                    <div id="myModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Video Youtube</h4>
                                </div>
                                <div class="modal-body">
                                    <pre id="myCode"></pre>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<script src="@Url.Content("~/Content/sceditor/minified/sceditor.min.js")"></script>

<script src="@Url.Content("~/Content/sceditor/minified/formats/bbcode.js")"></script>
<script>

       
    var textarea = document.getElementById('contenido');
        sceditor.create(textarea, {
            format: 'bbcode',
            icons: 'monocons',
            style: '../minified/themes/content/default.min.css',
            resizeEnabled: false,
            width: "100%",
            height:"100%"
        });
        var textaread = document.getElementById('contenidoIngles');
        sceditor.create(textaread, {
            format: 'bbcode',
            icons: 'monocons',
            style: '../minified/themes/content/default.min.css',
            resizeEnabled: false,
            width: "100%",
            height: "100%"
        });
        var textareat = document.getElementById('introduccion');
        sceditor.create(textareat, {
            format: 'bbcode',
            icons: 'monocons',
            style: '../minified/themes/content/default.min.css',
            resizeEnabled: false,
            width: "100%",
            height: "100%"
        });
        var textareac = document.getElementById('introduccionIngles');
        sceditor.create(textareac, {
            format: 'bbcode',
            icons: 'monocons',
            style: '../minified/themes/content/default.min.css',
            resizeEnabled: false,
            width: "100%",
            height: "100%"
        });
        $('#inputImage').change(function () {
            if (this.files[0].size > 10000000) {
                var control = jQuery('#inputImage');
                control.replaceWith(control = control.val('').clone(true));
                document.getElementById('val-img').innerHTML = "La imagen debe pesar menos de 10 mb. Seleccione nuevamente";
                $('#val-img').css("color", "red");

            }
            else {
                document.getElementById('val-img').innerHTML = "";
            }
        });

        $(document).ready(function() {
            $("#openModal").click(function () {
                var url = $('input:text[name=urlYoutube]').val();
                var myId = getId(url);

                $('#myId').html(myId);

                $('#myCode').html('<iframe width="508" height="258" src="//www.youtube.com/embed/' + myId + '" frameborder="0" allowfullscreen></iframe>');
            });

            function getId(url) {
                var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
                var match = url.match(regExp);

                if (match && match[2].length == 11) {
                    return match[2];
                } else {
                    return 'error';
                }
            }
        });

        $.validator.addMethod('filesize', function(value, element, param) {
            return this.optional(element) || (element.files[0].size <= param)
        });
        $(function() {
            $('input[name^="foto2"]').rules('add', {
                accept: "png,jpg,jpeg",
                filesize: 10485760,
                messages: {
                    accept: "Solo archivos png, jpg, jpeg",
                    filesize: "Solo archivos de tamaño menor a 10 MB"
                }
            });
        });

        jQuery(document).ready(function() {
            var message = '@message';
            var typemessage = '@typemessage';

            if (typemessage && message) {
                if (typemessage == '1') {
                    $('#Success').html('<h3>' + message + '<h3>');
                    $('#Success').css("display", "block");
                    $('#Success').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Success').css("display", "block");
                } else if (typemessage == '2') {
                    $('#Error').html('<h3>' + message + '<h3>');
                    $('#Error').css("display", "block");
                    $('#Error').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Error').css("display", "block");
                }
            }
        });
</script>
    <script src="@Url.Content("~/Content/Administrador/plugins/cropper/cropper.min.js")"></script>
    <script src="@Url.Content("~/Content/Administrador/scripts/image-cropper.js")"></script>
}


